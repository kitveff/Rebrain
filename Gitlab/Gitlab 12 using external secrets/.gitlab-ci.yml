# укажем специальные переменные variables для корректной работы докера в докере
# (этот режим потребуется для сборки образа)
variables:
  VAULT_ADDR: "http://158.160.187.147:8200"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_IMAGE: "l4mbada/rebrain"
  DOCKER_TAG: "2048-latest"

stages:  
  - linter
  - get-secret  
  - build
  - push

docker-lint-job:   
  stage: linter           # стадия (из определённых выше)
  image: docker:24.0    # используемый образ
  services:               # позволяет запустить другой контейнер
    - docker:24.0-dind 
  script:                 # код команды для выполнения
    - docker run --rm -i ghcr.io/hadolint/hadolint < Dockerfile

get-docker-secret:      
  stage: get-secret
  image: hashicorp/vault:1.15.3
  script:
    - apk add --no-cache jq
    - export VAULT_TOKEN=$VAULT_TOKEN_VAR
    - export DOCKER_TOKEN=$(vault kv get -field=token docker/registry)
    - echo "$DOCKER_TOKEN" > docker_token.txt
  artifacts:
    paths:
      - docker_token.txt
    expire_in: 1 hour
  only:
    - main


build-image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u l4mbada --password-stdin $DOCKER_REGISTRY < docker_token.txt
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker save -o image.tar $DOCKER_IMAGE:$DOCKER_TAG
  dependencies:
    - get-docker-secret
  only:
    - main
  artifacts:
    paths:
      - image.tar
    expire_in: 1 week

push-image:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u l4mbada --password-stdin $DOCKER_REGISTRY < docker_token.txt
  script:
    - docker load -i image.tar
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  dependencies:
    - get-docker-secret
    - build-image
  only:
    - main